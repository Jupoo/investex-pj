# Generated by Django 2.1.1 on 2018-09-05 13:44

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('title', models.CharField(max_length=100, verbose_name='title')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated')),
                ('client_type', models.PositiveIntegerField(choices=[(1, 'sales'), (2, 'client'), (3, 'ib')], default=2, verbose_name='type')),
                ('account_dashboard_uid', models.CharField(blank=True, max_length=36, verbose_name='account dashboard UUID')),
                ('nav', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='nav')),
                ('trading_volume', models.PositiveIntegerField(default=0, verbose_name='trading volume')),
                ('deposits', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='deposits sum')),
                ('withdrawals', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='withdrawals sum')),
                ('registered_date', models.DateTimeField(blank=True, null=True, verbose_name='registered date')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('last_contact', models.DateTimeField(blank=True, null=True, verbose_name='last contact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated')),
                ('text', models.TextField(blank=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='channel_comments', to='clients.Channel')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to='clients.Client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommentFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='created')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='updated')),
                ('file', models.FileField(upload_to='comment_files/%Y/%m/%d/')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='files', to='clients.Comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('title', models.CharField(max_length=100, verbose_name='title')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
    ]
